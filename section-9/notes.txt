// Mutating variables
let a = 111;
let b = 999;
const obj = { a: 23, b: 7, c: 14 };
({ a, b } = obj);

// Nested objects
const {
  fri: { open: o, close: c },
} = openingHours;
console.log(o, c);

the spread operator works on all iterables (arrays, strings, maps, or sets but not objects)
we can only use the spread operator when building an array or when we pass values into a function

Rest Pattern (we compress)
const [a, b, ...others] = [1, 2, 3, 4, 5];
console.log(a, b, others); // others will be [3,4,5]

const {sat, ...weekdays} = restaurant.openingHours


// 2) Functions
const add = function (...numbers) {
  let sum = 0;
  for (let i = 0; i < numbers.length; i++) sum += numbers[i];
  console.log(sum);
};

add(2, 3);
add(5, 3, 7, 2);
add(8, 2, 5, 3, 2, 1, 4);

const x = [23, 5, 7];
add(...x);

// USE ANY data type, return ANY data type, short-circuiting
console.log(3 || 'Jonas');
ex: below 'Hello' will short circuit the entire operation
console.log(undefined || 0 || '' || 'Hello' || 23 || null);